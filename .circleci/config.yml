version: 2
jobs:
 build:
    docker:
      - image: cimg/openjdk:18.0.1
    steps:
      - checkout
      - run: java --version

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    description: Installs Allure Framework and registers it as /usr/local/bin/allure
    parameters:
    version:
      description: Allure version to use
      type: string
      default: 2.13.1
steps:
  - run:
      name: Allure archive download
      command: >-
        curl -L https://github.com/allure-framework/allure2/releases/download/<<
        parameters.version >>/allure-commandline-<< parameters.version >>.zip -o
        /tmp/allure.zip
  - run:
      name: Archive extraction
      command: unzip /tmp/allure.zip
  - run:
      name: Allure installation
      command: sudo mv allure-<< parameters.version >> /usr/local/share/allure
  - run:
      name: Allure binary symlinking
      command: sudo ln -s /usr/local/share/allure/bin/allure /usr/local/bin/allure

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}


        # run tests!
      - run: mvn clean test
      # - run: mvn test
    workflows:
    maven_test:
    jobs:
      - maven/test
    

build:
  working_directory: /tmp
  steps:
    - run:
        name: Creating Dummy Artifacts
        command: |
          echo "my artifact file" > /tmp/art-1;
          mkdir /tmp/artifacts;
          echo "my artifact files in a dir" > /tmp/artifacts/art-2;

    - store_artifacts:
        path: /tmp/art-1
        destination: artifact-file

    - store_artifacts:
        path: /tmp/artifacts
orbs: 
  allure: ayte/allure@0.1.3



